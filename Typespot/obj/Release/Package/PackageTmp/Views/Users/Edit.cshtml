@using Microsoft.AspNet.Identity.EntityFramework

@model Typespot.Models.ApplicationUser

@{
    ViewBag.Title = "Rediger bruger";
}

<div class="page-header">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <h2>Rediger bruger</h2>
            </div>
        </div>
    </div>
</div>

<div class="body-content">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                @using( Html.BeginForm( "Edit", "Users", FormMethod.Post, new { enctype = "multipart/form-data" } ) )
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        
                        @Html.ValidationSummary( true, "", new { @class = "text-danger" } )
                        @Html.HiddenFor( model => model.Id )
                        @Html.HiddenFor( model => model.AccessFailedCount )
                        @Html.HiddenFor( model => model.TwoFactorEnabled )
                        @Html.HiddenFor( model => model.SecurityStamp )

                        <div class="form-group">
                            @Html.LabelFor( model => model.PersonalityId, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.DropDownList( "PersonalityId", null, htmlAttributes: new { @class = "form-control" } )
                                @Html.ValidationMessageFor( model => model.PersonalityId, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.EditorFor( model => model.FullName, new { htmlAttributes = new { @class = "form-control" } } )
                                @Html.ValidationMessageFor( model => model.FullName, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.EditorFor( model => model.Email, new { htmlAttributes = new { @class = "form-control" } } )
                                @Html.ValidationMessageFor( model => model.Email, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.EditorFor( model => model.UserName, new { htmlAttributes = new { @class = "form-control" } } )
                                @Html.ValidationMessageFor( model => model.UserName, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor( model => model.EmailConfirmed )
                                    @Html.ValidationMessageFor( model => model.EmailConfirmed, "", new { @class = "text-danger" } )
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.EditorFor( model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } } )
                                @Html.ValidationMessageFor( model => model.PhoneNumber, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor( model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @Html.DisplayFor( model => model.ImageUrl )
                                @Html.HiddenFor( model => model.ImageUrl )
                                @Html.EditorFor( model => model.File, new { htmlAttributes = new { @class = "form-control" } } )
                                @Html.ValidationMessageFor( model => model.File, "", new { @class = "text-danger" } )
                            </div>
                        </div>

                        @if( User.IsInRole( "Superusers" ) )
                        {
                            @*<div class="form-group">
                        @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                            <div class="form-group">
                                @Html.LabelFor( model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" } )
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor( model => model.LockoutEnabled )
                                        @Html.ValidationMessageFor( model => model.LockoutEnabled, "", new { @class = "text-danger" } )
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor( model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" } )
                                <div class="col-md-10">
                                    @foreach( IdentityRole role in (ICollection<IdentityRole>)ViewBag.Roles )
                                    {
                                        <div class="checkbox">
                                            <input type="checkbox"
                                                   name="@Html.NameFor(model => model.Roles)"
                                                   value="@role.Name"
                                                   @(Model.Roles.Any( p => p.RoleId == role.Id ) ? "checked" : null) />
                                            <label>@role.Name</label>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                        else
                        {
                            @*@Html.HiddenFor( model => model.LockoutEndDateUtc )*@
                            @Html.HiddenFor( model => model.LockoutEnabled )
                            @Html.HiddenFor( model => model.Roles )

                        }
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
