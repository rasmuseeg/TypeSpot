@using Typespot.Models
@using Typespot.Controllers
@model LoginViewModel
@{
    Layout = "_Stripped.cshtml";

    ViewBag.Title = "Log in";
    var Settings = (IDictionary<string, PropertyValue>)ViewBag.SiteConfig;
    Boolean allowRegistration = true;
    Boolean.TryParse(Settings["AllowRegistration"].Value, out allowRegistration);
}
<style>
    html{
    width: 100%;
    height: 100%;
    overflow: hidden;
    }
    body{
        background: url('/Content/images/login-bg.jpg') center center no-repeat;
        background-size: cover;
        min-height: 100%;
    }
    #loginForm,
    .c-login{
        width: 300px; 
        margin: 0 auto; 
        float: none;

        background-color: #fff;
        padding: 15px;
    }
</style>
<div class="row">
    <div class="col-xs-12">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Log på.</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    <div class="">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <small class="pull-right">
                        @Html.ActionLink( "Glemt din adgangskode?", "ForgotPassword" )
                    </small>
                    @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    <div class="">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <input type="submit" value="Log in" class="btn btn-primary" />
                    <div class="checkbox pull-right">
                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe)
                    </div>
                </div>
                <div class="form-group">
                    
                </div>
                if( allowRegistration ) { 
                <p>
                    @Html.ActionLink("Opret en ny konto", "Register")
                </p>
                }
                @* Enable this once you have account confirmation enabled for password reset functionality*@
                    
            }
        </section>
    </div>
    <div class="col-md-4">
        @*<section id="socialLoginForm">
            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
        </section>*@
    </div>
</div>